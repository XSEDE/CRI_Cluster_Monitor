---

 - name: install prerequisites
   yum: 
     name: "{{ item }}"
     state: installed
   with_items:
     - "cronie"
     - "gmp-devel"
     - "httpd"
     - "java-1.7.0-openjdk"
     - "java-1.7.0-openjdk-devel"
     - "logrotate"
     - "mariadb"
     - "mariadb-server"
     - "MySQL-python"
     - "php"
     - "php-cli"
     - "php-gd"
     - "php-gmp"
     - "php-mcrypt"
     - "php-mysql"
     - "php-pdo"
     - "php-pear-Log"
     - "php-pear-MDB2"
     - "php-pear-MDB2-Driver-mysql"
     - "php-xml"
     - "bzip2"

 - name: get phantomJS
   unarchive: src="https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2" dest="/tmp/" remote_src=yes
   

 - name: install phantomJS
   copy: src="/tmp/phantomjs-2.1.1-linux-x86_64/bin/phantomjs" dest="/usr/local/bin/phantomjs" owner=root group=root mode=0755
   
 - name: get timezone
   shell: timedatectl status | grep 'Time zone:' | awk '{print $3}'
   register: php_parsable_timezone

 - debug:
     var: php_parsable_timezone

 - name: set php timezone
   lineinfile: 
     path: /etc/php.ini
     regexp: "^;date.timezone"
     line: 'date.timezone=({{ item }})'
     state: present
   with_items:
     - "{{ php_parsable_timezone.stdout_lines }}"

 - name: install openxdmod rpm from github
   yum: name="{{ xdmod_url }}" state=installed #"for vim syntax highlighting...

 - name: ensure mariadb is running
   service: name=mariadb state=started enabled=yes

# - name: xdmod httpd conf
#   template: src=xdmod.conf dest=/etc/httpd/conf.d/xdmod.conf

 - name: xdmod portal settings template
   template: src=portal_settings.ini.j2 dest=/etc/xdmod/portal_settings.ini

 - name: xdmod resources template
   template: src=resources.json.j2 dest=/etc/xdmod/resources.json

 - name: xdmod resource specs template
   template: src=resource_specs.json.j2 dest=/etc/xdmod/resource_specs.json

 - name: xdmod organization template
   template: src=organization.json.j2 dest=/etc/xdmod/organization.json

 - name: xdmod auto update template
   template: src=update_check.json.j2 dest=/etc/xdmod/update_check.json

#Need to initialize databases still
 - name: initialize xdmod databases
   mysql_db:
     name: "{{ item | basename | regex_replace('.sql','') }}"
     state: import
     target: "{{ item }}"
   with_fileglob:
     - /usr/share/xdmod/db/schema/*
     - /usr/share/xdmod/db/data/*

 - name: create db user
   mysql_user:
     name: "xdmod"
     password: "{{ xdmod_db_pass }}"
     priv: "mod_hpcdb.*:ALL/mod_logger.*:ALL/mod_shredder.*:ALL/moddb.*:ALL/modw.*:ALL/modw_aggregates.*:ALL/modw_filters.*:ALL"
     state: present

 - name: populate xdmod databases with tables
   command: /usr/share/xdmod/tools/etl/etl_overseer.php -p {{ item }}
   loop: 
     - xdmod.hpcdb-bootstrap
     - xdmod.jobs-xdw-bootstrap
     - xdmod.shredder-bootstrap
     - xdmod.staging-bootstrap
     - xdmod.xdb-bootstrap
     #- xdmod.xdw-bootstrap-storage

 - name: initialize acls
   command: acl-xdmod-management

 - name: config acls
   command: acl-config

 - name: import acls
   command: acl-import

 - name: shred slurm records
   command: xdmod-slurm-helper -r {{ slurm_cluster_name }}

 - name: ingest slurm records
   command: xdmod-ingestor

 - name: create xdmod shred cron job
   cron:
     hour: 0
     minute: 10
     state: present
     job: "xdmod-slurm-helper -r {{ slurm_cluster_name }}"

 - name: create xdmod ingestor cron job
   cron:
     hour: 0
     minute: 30
     state: present
     job: "xdmod-ingestor"

 - name: reload httpd
   service: name=httpd state=restarted enabled=yes

