---

 - name: install grafana packages
   yum: name=Grafana state=installed

# - name: sync files #may not be needed.  Artifact from ganglia
#   command: wwsh file sync

#- name: allow httpd to network connect  #Verify that grafana works without stuffs.  If not, check getsebool.
#   seboolean: name=httpd_can_network_connect state=yes persistent=yes

 - name: add grafana to firewalld services
   template: src=grafana.xml dest=/etc/firewalld/services/grafana.xml

 - name: reload firewalld
   command: firewall-cmd --reload

 - name: add ganglia to internal zone
   firewalld:
     zone: internal
     service: "ganglia"
     permanent: yes
     immediate: yes
     state: enabled

 - name: ganglia httpd conf
   template: src=ganglia-ohpc.conf.j2 dest=/etc/httpd/conf.d/ganglia-ohpc.conf

#   template: src=httpd.conf.j2 dest=/etc/httpd/conf/httpd.conf
#
#
# - name: restart httpd
#
 - name: start service on headnode (gmetad)
   service: name=gmetad state=restarted enabled=yes

 - name: start service on headnode (gmond)
   service: name=gmond state=restarted enabled=yes

 - name: get compute node names (wwsh)
   shell: wwsh node list | tail -n +3 | awk '{print $1}'
   register: node_name_list

 - name: reboot computes (wwsh)
   command: ssh {{ item }} "reboot"
   with_items:
     - "{{ node_name_list.stdout_lines }}"
   ignore_errors: yes #since you get a 'connection closed by remote host'

 - name: wait for nodes to reboot
   pause: prompt="Hit ENTER to continue once all compute nodes have rebooted with the new image!"

# - name: get compute node names2 (wwsh)
#   shell: wwsh node list | tail -n +3 | awk '{print $1}'
#   register: node_name_list
#
# - name: start and enable service on computes (gmond)
#   command: ssh {{ item }} 'systemctl enable gmond && systemctl start gmond'
#   with_items:
#     - "{{ node_name_list.stdout_lines }}"
